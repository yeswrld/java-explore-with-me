DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS CATEGORIES CASCADE;
DROP TABLE IF EXISTS LOCATIONS CASCADE;
DROP TABLE IF EXISTS EVENTS CASCADE;
DROP TABLE IF EXISTS REQUESTS CASCADE;
DROP TABLE IF EXISTS COMPILATIONS CASCADE;
DROP TABLE IF EXISTS COMPILATION_EVENTS CASCADE;
DROP TABLE IF EXISTS COMMENTS CASCADE;

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR UNIQUE NOT NULL,
    EMAIL   VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    CATEGORY_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CATEGORY_NAME VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS LOCATIONS
(
    LOCATION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    LAT FLOAT NOT NULL,
    LON FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    EVENT_ID           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID            BIGINT                      NOT NULL,
    ANNOTATION         VARCHAR                     NOT NULL,
    CATEGORY_ID        BIGINT                      NOT NULL,
    CREATE_DATE        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    DESCRIPTION        VARCHAR                     NOT NULL,
    EVENT_DATE         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    LOCATION_ID        BIGINT                      NOT NULL,
    PAID               BOOLEAN                     NOT NULL,
    PARTICIPANT_LIMIT  BIGINT                      NOT NULL,
    PUBLISHED_DATE     TIMESTAMP WITHOUT TIME ZONE,
    REQUEST_MODERATION BOOLEAN                     NOT NULL,
    STATE              VARCHAR                     NOT NULL,
    TITLE              VARCHAR                     NOT NULL,
    CONSTRAINT FK_USERS FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
    CONSTRAINT FK_CATEGORIES FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (CATEGORY_ID),
    CONSTRAINT FK_LOCATIONS FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    REQUEST_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CREATED    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    EVENT_ID   BIGINT                      NOT NULL,
    USER_ID    BIGINT                      NOT NULL,
    STATUS     VARCHAR                     NOT NULL,
    CONSTRAINT FK_EVENT_ID FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (EVENT_ID),
    CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
    CONSTRAINT UNIQUE_REQUEST UNIQUE (USER_ID, EVENT_ID)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    COMPILATION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PINNED         BOOLEAN NOT NULL,
    TITLE          VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS COMPILATION_EVENTS
(
    COMPILATION_ID BIGINT NOT NULL,
    EVENT_ID       BIGINT NOT NULL,
    CONSTRAINT FK_COMPILATION_EVENTS_EVENT FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (EVENT_ID),
    CONSTRAINT FK_COMPILATION_EVENTS_COMPILATION FOREIGN KEY (COMPILATION_ID) REFERENCES COMPILATIONS (COMPILATION_ID),
    CONSTRAINT PK_COMPILATION_EVENTS PRIMARY KEY (COMPILATION_ID, EVENT_ID)
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    COMMENT_ID  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TEXT        VARCHAR                                             NOT NULL,
    EVENT_ID    BIGINT REFERENCES EVENTS (EVENT_ID)                 NOT NULL,
    USER_ID     BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE NOT NULL,
    CREATE_DATE TIMESTAMP WITHOUT TIME ZONE                         NOT NULL,
    UPDATE_DATE TIMESTAMP WITHOUT TIME ZONE                         NOT NULL,
    STATE       VARCHAR                                             NOT NULL
);